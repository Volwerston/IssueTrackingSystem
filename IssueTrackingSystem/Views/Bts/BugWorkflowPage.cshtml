@model BTS.Models.Bug
@using BTS.Models;

@{
    ViewBag.Title = "BugWorkflowPage";
    Layout = "~/Views/Shared/_Main.cshtml";
}

<div class="row" id="messageContainer">
    <div class="col-lg-offset-2 col-sm-offset-2 col-md-offset-2 col-lg-8 col-xs-8 col-sm-8 col-md-8" style="background-color:  rgb(166, 228, 239); border-radius: 5px;">
        <br />
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("BugDescriptionPage", "Bts", new { projName = (string)ViewBag.ProjectName, id = Model.Id })">Description</a></li>
            <li class="breadcrumb-item active">Workflow</li>
            <li class="breadcrumb-item"><a href="@Url.Action("BugSolutionPage", "Bts", new { projName = (string)ViewBag.ProjectName, id = Model.Id })">Solution</a></li>
        </ol>
        <br />

        <div class="col-lg-offset-1 col-sm-offset-1 col-md-offset-1 col-lg-10 col-xs-10 col-sm-10 col-md-10">

            @if ((Session["Username"].ToString() == Model.TopicStarter || Convert.ToInt32(Session["Id"].ToString()) == Model.DeveloperId) && Model.Status != "Closed")
            {
                using (Html.BeginForm("BugWorkflowPage", "Bts", FormMethod.Post, new { @class = "form-horizontal", id = "formData", style = "background-color: rgb(53, 198, 255); background-corner: 5px; padding: 10px;" }))
                {
                    @Html.Hidden("projName", (string)ViewBag.ProjectName);
                    @Html.Hidden("recipientId", "0", new { id = "recipientId" });
                    @Html.Hidden("Recipient", "", new { id = "Recipient" });

                            <div class="form-group">
                                @Html.Label("To:", new { @class = "col-sm-offset-1 col-md-offset-1 col-lg-offset-1 col-xs-2 col-sm-2 col-md-2 col-lg-2 control-label" })
                                @Html.Editor("recipientData", new { htmlAttributes = new { @class = "col-xs-6 col-sm-6 col-md-6 col-lg-6 form-control", placeholder = "No message chosen", disabled="disabled"} })
                                <button type="button"  id="removeRecipient" class="btn btn-info"><span class="glyphicon glyphicon-remove"></span></button>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-offset-3 col-sm-offset-3 col-md-offset-3 col-lg-7 col-xs-7 col-sm-7 col-md-7" style="margin-bottom: 5px; margin-top: 5px;">
                                    @Html.TextArea("messageToAdd", new { cols = 60, rows = 10, @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-offset-5 col-sm-offset-5 col-md-offset-5">
                                    <button class="btn btn-default col-lg-4 col-xs-4 col-sm-4 col-md-4" type="submit" id="addMessage" style="margin-bottom: 5px;" disabled>Send</button>
                                </div>
                            </div>
                }
            }
            <br />
            <hr />

    @if ((List<Message>)ViewBag.Messages != null)
    {
        foreach(Message message in (List<Message>)ViewBag.Messages)
        {
            <div class="row" style="margin-bottom: 15px;">
                <div class="col-lg-offset-1 col-sm-offset-1 col-md-offset-1 col-lg-10 col-xs-10 col-sm-10 col-md-10"  id="@Convert.ToString(message.Id)" style="background-color: rgb(155, 210, 226); border-radius: 5px;">
                    <div class="row" style="margin-bottom: 5px;">
                        <div class="col-lg-offset-1 col-sm-offset-1 col-md-offset-1 col-lg-3 col-xs-3 col-sm-3 col-md-3">
                            <p>@message.SenderNick</p>
                        </div>
                        <div class="col-lg-offset-1 col-sm-offset-1 col-md-offset-1 col-lg-5 col-xs-5 col-sm-5 col-md-5">
                            <p>@message.AddingTime.</p>
                        </div>
                    </div>
                    <div class="row" style="margin-bottom: 5px;word-wrap:break-word">

                       
                        <div class="col-lg-offset-1 col-sm-offset-1 col-md-offset-1 col-lg-10 col-xs-10 col-sm-10 col-md-10">
                            @if (message.MessageToReplyId != 0)
                            {
                                <p>To: <a href="#@Convert.ToString(message.MessageToReplyId)" >@message.UserToReply</a></p>
                                <br/>
                                <br/>
                            }
                                <pre class="dataClass">@message.MessageText</pre>
                            
                        </div>
                    </div>

                    @if (Model.Status != "Closed")
                    {
                    if ((Session["Username"].ToString() == Model.TopicStarter || int.Parse(Session["Id"].ToString()) == Model.DeveloperId)
                            && Session["Username"].ToString() != message.SenderNick)
                    {
                        <div class="row" style="margin-bottom: 5px;">
                            <div class="col-sm-offset-1 col-md-offset-1 col-lg-offset-1 col-xs-3 col-sm-3 col-md-3 col-lg-3">
                                @if (Model.Status != "Closed")
                                {
                                <a onclick="setRecipient('@message.SenderNick', '@message.AddingTime', '@message.Id')">Reply</a>
                                }
                                </div>

                    @if (Session["Username"].ToString() == Model.TopicStarter)
                    {
                        <div class="col-sm-offset-1 col-md-offset-1 col-lg-offset-1 col-xs-3 col-sm-3 col-md-3 col-lg-3">
                            <button type="button" onclick='setSelected("@message.Id")' data-toggle="modal" data-target="#markAsRight" class="btn btn-default">Mark as correct</button>
                        </div>
                    }
                            </div>
                    }
                    }

                        </div>
            </div>
        }
    }
    <br />
            </div>
        </div>
    </div>

<div class="modal fade" id="markAsRight" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color:darkgrey; color: white; border-top-left-radius: 5px;border-top-right-radius: 5px;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title text-center">Mark as correct</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal" style="display: table; margin: auto; min-width: 75%;">
                    <div class="form-group">
                        @Html.Label("Estimate answer:", new { @class = "control-label col-sm-offset-1 col-md-offset-1 col-lg-offset-1 col-xs-5 col-sm-5 col-md-5 col-lg-5" })
                        <div class="col-sm-offset-1 col-md-offset-1 col-lg-offset-1 col-xs-3 col-sm-3 col-md-3 col-lg-3">
                            @Html.DropDownList("Mark", new List<SelectListItem> { new SelectListItem { Text="1",  Value="1" },
                                                                                new SelectListItem { Text = "2", Value = "2" },
                                                                                new SelectListItem { Text = "3", Value = "3" },
                                                                                new SelectListItem { Text = "4", Value = "4" },
                                                                                new SelectListItem { Text = "5", Value = "5" },
                                                                                new SelectListItem { Text = "6", Value = "6" },
                                                                                new SelectListItem { Text = "7", Value = "7" },
                                                                                new SelectListItem { Text = "8", Value = "8" },
                                                                                new SelectListItem { Text = "9", Value = "9" },
                                                                                new SelectListItem { Text = "10", Value = "10" } }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-md-offset-2 col-lg-offset-2  col-xs-8 col-sm-8 col-md-8 col-lg-8">
                            @Html.TextArea("finalComment", new { rows = 10, cols = 30, @class = "form-control", placeholder="Final comment..." })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="background-color:darkgrey; color: white; border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;">
                <button type="button" data-dismiss="modal" class="btn btn-info" id="correctSubmitButton">Submit</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{

    <script>
        var selectedItemId = 0;

        function setRecipient(nickname, date, messageId)
        {
            $("input[name='recipientData']").val(nickname + " " + date);

            $("#Recipient").val(nickname + " " + date);

            $("#recipientId").val(messageId);

            $("html, body").animate({ scrollTop: 0 });

            $("#removeRecipient").show();
        }

        $("#removeRecipient").click(function ()
        {
            $("input[name='recipientData']").val("");
            $("#recipientId").val("0");
            $("#Recipient").val("");
            $(this).hide();
        });

        function setSelected(selId)
        {
            selectedItemId = selId;
        }

        $(document).ready(function () {

            var preData = $('pre');

            preData.each(function ()
            {
                var text = $(this).text();
                $(this).empty();
                $(this).append(text);
            });

            var correctItemId = "@ViewBag.CorrectItem";

            if (correctItemId != null && correctItemId > 0)
            {
                $("#" + correctItemId).css("background-color", "rgb(86, 251, 179)");
            }

            $("textarea[name='messageToAdd']").keyup(function () {

                var str = $(this).val().trim();

                if (str == "") {
                    if (!($("#addMessage").prop("disabled"))) {
                        $("#addMessage").prop("disabled", true);
                    }
                }
                else {
                    $("#addMessage").removeProp("disabled");
                }
            });

            $("textarea[name='finalComment']").keyup(function () {

                var str = $(this).val().trim();

                if (str == "") {
                    if (!($("#correctSubmitButton").prop("disabled"))) {
                        $("#correctSubmitButton").prop("disabled", true);
                    }
                }
                else {
                    $("#correctSubmitButton").removeProp("disabled");
                }
            });

            $("#correctSubmitButton").click(function () {
                var toPass = JSON.stringify({
                    selectedItemId: selectedItemId,
                    estimate: $("select[name='Mark'] option:selected").val(),
                    finalComment: $("textarea[name='finalComment']").val(),
                    bugId: "@Model.Id",
                    projectName: "@ViewBag.ProjectName.ToString()"
                });

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("MarkRightAnswer", "Bts")",
                    dataType: "json",
                    data: toPass,
                    contentType: "application/json; charset=utf-8",
                    success: function(res)
                    {
                        if(res)
                        {
                            displayMessage("Success", "Write answer is successfully marked");

                            var buttons = $("#messageContainer").find("button");

                            buttons.each(function () {
                                $(this).hide();
                            });

                            $("#formData").hide();

                            $("#" + selectedItemId).css("background-color", "rgb(86, 251, 179)");
                        }
                        else
                        {
                            displayMessage("Error", "Changes were not applied");
                        }
                    },
                    error: function(xhr, status, message)
                    {
                        displayMessage("Error", message);
                    }
                });
            });
        });

        function encodePreElements() {
            var pre = document.getElementsByTagName('pre');
            alert(pre);
            for (var i = 0; i < pre.length; i++) {
                var encoded = htmlEncode(pre[i].innerHTML);
                pre[i].innerHTML = encoded;
            }
        }

        function htmlEncode(value) {
            var div = document.createElement('div');
            var text = document.createTextNode(value);
            div.appendChild(text);
            return div.innerHTML;
        }
    </script>
}