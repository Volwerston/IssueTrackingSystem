@model BTS.Models.Project
@using BTS.Models
@using System.Collections.Generic
@using Newtonsoft.Json;

@{
    ViewBag.Title = "ShowProject";
    Layout = "~/Views/Shared/_Main.cshtml";

    List<SelectListItem> items = (List<SelectListItem>)ViewBag.Developers;
}

<div style="margin: 10px 10px 10px 10px; padding: 10px 10px 10px 10px;">
<div class="row">
    <div class="col-md-3"  style="background-color: rgb(110, 255, 192); border-radius: 5px; margin: 0px 25px 25px 50px;">
        <div class="text-center">
            <p class="text-center">@Html.DisplayFor(model => model.Name)</p>
        </div>
        <div>
            <p>@Html.DisplayFor(model => model.Description)
        </div>
        <div style="overflow-x:hidden; overflow-y: auto;">
            <p>@Html.DisplayFor(model => model.Updates)</p>
        </div>
        <div class="row" style="padding-bottom: 5px; margin-left: 2px; margin-right: 2px;">
         <input type="submit" class="col-xs-2 col-sm-2 col-md-2 col-lg-2 btn btn-info btn-block" value="Report bug" onclick="location.href='@Url.Action("ReportBug", "Bts", new { @projectId = Model.Id })'" />
        </div>

        @if (Session["Status"].ToString() == "Admin")
        {
            <div class="row" style="padding-bottom: 5px; margin-left: 2px; margin-right: 2px;">
                <input type="submit" class="col-xs-2 col-sm-2 col-md-2 col-lg-2 btn btn-info btn-block" value="Manage staff" data-toggle="modal" data-target="#accountManager" />
            </div>
        }

    </div>
    <div class="col-md-7" style="background-color: rgb(69, 163, 231); border-radius: 5px;">
        <div class="form-horizontal" style="padding: 10px 10px 10px 10px;">
            <div class="form-group">
                    @Html.Label("Number of items:", new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    @Html.DropDownList("itemsCount", new List<SelectListItem>() {
                   new SelectListItem() { Text="1", Value = "1", Selected = true },
                   new SelectListItem() { Text="2", Value = "2"},
                   new SelectListItem() { Text="3", Value = "3"},
                   new SelectListItem() { Text="4", Value = "4"},
                   new SelectListItem() { Text="5", Value = "5"}}, new { id = "itemsCount", @class="form-control" })
                </div>
            </div>
            <div class="form-group">
                    @Html.Label("Search:", new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.Editor("searchData", new { htmlAttributes = new { @class = "form-control", id="searchData" } })
                </div>
            </div>
        </div>
        <div id="tableData" style="margin: 5px 5px 5px 5px; color:rgb(141, 202, 246); color: black;">

        </div>
        <div class="text-center" id="paginationData">

        </div>
    </div>
    </div>
</div>

<div class="modal fade" role="dialog" id="accountManager">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color:darkgrey; color: white; border-top-left-radius: 5px;border-top-right-radius: 5px;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title text-center">Manage developers</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal" style="display: table; margin: auto; min-width: 75%;">
                    <div class="form-group">
                        <div class="row">
                            @Html.Label("Remove: ", new { @class = "col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-6 xol-sm-6 col-md-6 col-lg-6">

                                @if (items != null)
                                {
                                    <select id="ms" multiple="multiple">
                                        @{
                                            foreach (var item in items)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                            }
                            </div>
                        </div>
                        <br/>
                        <div class="row">
                            <div class="col-sm-offset-4 col-md-offset-4 col-lg-offset-4 col-xs-4 col-sm-4 col-md-4 col-lg-4">
                                <button type="button" class="btn btn-default btn-block" onclick='location.href="@Url.Action("InviteDevelopers", "Bts", new { projectName = Model.Name })"'>Invite developer</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="background-color:darkgrey; color: white; border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;">
                <button type="button" data-dismiss="modal" class="btn btn-info" id="staffSubmitButton"  onclick="eraseDevelopers()">Submit</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
<script src="~/Scripts/multiple-select.js"></script>

<script>
    var allEntries = [];
    var currEntries = [];
    var numOfLists;
    var sortOrderId = "byId";
    var currList;

    $(document).ready(function () {

        $('#ms').change(function () {
            console.log($(this).val());
        }).multipleSelect({
            width: '100%'
        });

        populateData("", $("#itemsCount").val());

        currList = 1;
        showList(currList, $("#itemsCount").val());
        addPagination($("#itemsCount").val());

        $(".clickable-row").click(function () {
            window.document.location = $(this).data("href");
        });


        $("#itemsCount").change(function () {

            $("#tableData").empty();
            populateData($("#searchData").val(), $("#itemsCount").val());

            currList = 1;
            showList(currList, $("#itemsCount").val());
            addPagination($("#itemsCount").val());
        });

        $("#searchData").keyup(function () {
            $("#tableData").empty();
            populateData($("#searchData").val(), $("#itemsCount").val());

            currList = 1;
            showList(currList, $("#itemsCount").val());
            addPagination($("#itemsCount").val());
        });

    });

    function eraseDevelopers() {
        var selectedOnes = $('#ms option:selected');

        var toErase = [];

        selectedOnes.each(function ()
        {
            toErase.push($(this).val());
        });

        var toPass = JSON.stringify({
            toErase: toErase,
            projectName : "@Model.Name"
        });

        $.ajax({
            type: "POST",
            url: "@Url.Action("RemoveDevelopersFromProject", "Bts")",
            dataType: "json",
            data: toPass,
            contentType: "application/json; charset=utf-8",
            success: function(res)
            {
                if(res)
                {
                    window.location.reload(true);

                    selectedOnes.each(function () {
                        $(this).remove();
                    });
                }
                else {
                    displayMessage("Error", "The changes were not applied");
                }
            },
            error: function(xhr, status, message)
            {
                displayMessage("Error", message);
            }
        });
    }

    function managePagination(itemId) {
        var listItems = $("#paginationData").find("*");

        var currId;

        listItems.each(function () {

            if ($(this).hasClass("active")) {
                currId = this.id;
                $(this).removeClass("active");
            }
        });

        if(itemId == "first")
        {
            if (currEntries.length != 0) {
                $("#tableData").empty();
                currList = 1;
                showList(currList, $("#itemsCount").val());
                addPagination($("#itemsCount").val());
            }
            else {
                $("#" + currId).addClass("active");
            }
        }
        else if(itemId == "last")
        {
            if (currEntries.length != 0) {
                $("#tableData").empty();
                $("#paginationData").empty();

                var paginationInfo = '<ul class="pagination"><li  id="prev" onclick="managePagination(\'first\')"><a href="#"><<</a></li>'
                                      + '<li  id="prev" onclick="managePagination(\'prev\')"><a href="#"><</a></li>';

                if (currEntries.length < 3) {
                    for (var i = 1; i <= currEntries.length; ++i) {
                        paginationInfo += '<li id="' + i + '"  onclick="managePagination(\'' + i + '\')"><a href="#">' + i + '</a></li>';
                    }

                }
                else {
                    for (var i = currEntries.length - 2; i <= currEntries.length; ++i) {
                        paginationInfo += '<li id="' + i + '"  onclick="managePagination(\'' + i + '\')"><a href="#">' + i + '</a></li>';
                    }

                }

                paginationInfo += '<li id="next" onclick="managePagination(\'next\')"><a href="#">></a></li>' +
                '<li id="next" onclick="managePagination(\'last\')"><a href="#">>></a></li></ul>';

                $("#paginationData").append(paginationInfo);

                $("#" + currEntries.length).addClass("active");

                showList(currEntries.length, $("#itemsCount").val());
            }
            else {
                $("#" + currId).addClass("active");
            }
        }
        else if (itemId != "next" && itemId != "prev") {
            $("#" + itemId).addClass("active");

            $("#tableData").empty();

            currList = itemId;
            showList(currList, $("#itemsCount").val());
        }
        else if (itemId == "next") {

            var prevId = currId;
            ++currId;

            while (currId % 3 != 1) {
                ++currId;
            }

            if (currId <= numOfLists)
            {
                $("#tableData").empty();
                $("#paginationData").empty();

                var paginationInfo = '<ul class="pagination"><li  id="prev" onclick="managePagination(\'first\')"><a href="#"><<</a></li>'
                + '<li  id="prev" onclick="managePagination(\'prev\')"><a href="#"><</a></li>';

                if (currId + 2 >= numOfLists) {
                    for (var i = currId; i <= numOfLists; ++i) {
                        paginationInfo += '<li id="' + i + '"  onclick="managePagination(\'' + i + '\')"><a href="#">' + i + '</a></li>';

                        if (i == currId + 2) {
                            break;
                        }
                    }
                }
                else {
                    for (var i = currId; i <= currId + 2; ++i) {
                        paginationInfo += '<li id="' + i + '"  onclick="managePagination(\'' + i + '\')"><a href="#">' + i + '</a></li>';
                    }
                }

                paginationInfo += '<li id="next" onclick="managePagination(\'next\')"><a href="#">></a></li>' +
                    '<li id="next" onclick="managePagination(\'last\')"><a href="#">>></a></li></ul>';

                    $("#paginationData").append(paginationInfo);

                    $("#" + currId).addClass("active");

                    currList = currId;
                    showList(currList, $("#itemsCount").val());
            }
            else {
                $("#" + prevId).addClass("active");
            }
            }
            else {

            var prevId = currId;
            --currId;

            while(currId % 3 != 0)
            {
                --currId;
            }

            if(currId != 0)
            {
                $("#paginationData").empty();
                $("#tableData").empty();

                var paginationInfo = '<ul class="pagination"><li  id="prev" onclick="managePagination(\'first\')"><a href="#"><<</a></li>'
                + '<li  id="prev" onclick="managePagination(\'prev\')"><a href="#"><</a></li>';

                for(var i = currId - 2; i <= currId; ++i)
                {
                    paginationInfo += '<li id="' + i + '"  onclick="managePagination(\'' + i + '\')"><a href="#">' + i + '</a></li>';
                }

                paginationInfo += '<li id="next" onclick="managePagination(\'next\')"><a href="#">></a></li>' +
                    '<li id="next" onclick="managePagination(\'last\')"><a href="#">>></a></li></ul>';

                $("#paginationData").append(paginationInfo);

                for(var i = 1; i < 3; ++i)
                {
                --currId;
                }

                $("#" + currId).addClass("active");

                currList = currId;
                showList(currList, $("#itemsCount").val());
            }
            else
            {
                $("#" + prevId).addClass("active");
            }
            }
        }

        function populateData(toSearch, numOfItems) {

            if (allEntries.length == 0) {

                var str = '@Html.Raw(JsonConvert.SerializeObject(((List<Bug>)ViewBag.ProjectBugs).OrderBy(x => x.Id).ToList()))';

                allEntries = JSON.parse(str);
            }

            if (toSearch == "") {
                currEntries = allEntries;
            }
            else {
                currEntries = [];

                for (var i = 0; i < allEntries.length; ++i) {
                    if (allEntries[i].Subject.indexOf(toSearch) != -1) {
                        currEntries.push(allEntries[i]);
                    }
                }
            }
        }

        function showList(numOfList, numOfItems) {
            var toAppend = '<table class="table"><thead><tr><th>' +
                '<button onclick="changeSortOrder(\'byId\')" class="btn btn-default">Id <span class="glyphicon glyphicon-arrow-down" id="byId"></span></button></th><th>' +
                '<button onclick="changeSortOrder(\'bySubject\')" class="btn btn-default">Subject <span class="glyphicon glyphicon-arrow-down" id="bySubject"></span></button></th><th>' +
                '<button onclick="changeSortOrder(\'byStatus\')" class="btn btn-default">Status <span class="glyphicon glyphicon-arrow-down" id="byStatus"></button></th></tr></thead><tbody>';

            if (numOfItems * numOfList > currEntries.length) {
                for (var i = numOfItems * (numOfList - 1) ; i < currEntries.length; ++i) {
                    toAppend += '<tr class="clickable-row" data-href="@Url.Action("BugDescriptionPage","Bts", new { projName = Model.Name })&id=' + currEntries[i].Id + '"><td>' + currEntries[i].Id + '</td><td>' + currEntries[i].Subject + '</td><td>'
                                + currEntries[i].Status + '</td></tr>';
                }
            }
            else {
                for (var i = numOfItems * (numOfList - 1) ; i < numOfItems * numOfList; ++i) {
                    toAppend += '<tr class="clickable-row" data-href="@Url.Action("BugDescriptionPage","Bts", new { projName = Model.Name })&id=' + currEntries[i].Id + '"><td>' + currEntries[i].Id + '</td><td>' + currEntries[i].Subject + '</td><td>'
                                + currEntries[i].Status + '</td></tr>';
                }
            }

            
            toAppend += '</tbody></table>';

            if (currEntries.length == 0) {
                toAppend += '<div class="text-center">No bugs were found</div>'
            }

            $("#tableData").append(toAppend);

            if(sortOrderId != null)
            {
                $("#" + sortOrderId).removeClass("glyphicon-arrow-down");
                $("#" + sortOrderId).addClass("glyphicon-arrow-up");
            }
        }

        function addPagination(numOfItems) {

            $("#paginationData").empty();

            var paginationInfo = '<ul class="pagination"><li  id="prev" onclick="managePagination(\'first\')"><a href="#"><<</a></li>'
            + '<li  id="prev" onclick="managePagination(\'prev\')"><a href="#"><</a></li>';

            numOfLists = Math.ceil(currEntries.length / numOfItems);

            paginationInfo += '<li id="1" class="active" onclick="managePagination(\'1\')"><a href="#">1</a></li>';

            for (var i = 2; i <= numOfLists; ++i) {
                paginationInfo += '<li id="' + i + '"  onclick="managePagination(\'' + i + '\')"><a href="#">' + i + '</a></li>';

                if (i == 3) {
                    break;
                }
            }

            paginationInfo += '<li id="next" onclick="managePagination(\'next\')"><a href="#">></a></li>' +
                '<li id="next" onclick="managePagination(\'last\')"><a href="#">>></a></li></ul>';

            $("#paginationData").append(paginationInfo);
        }

        function changeSortOrder(byProperty) {

            if (byProperty == "byStatus") {
                if (sortOrderId == "byStatus") {
                    sortOrderId = null;
                    currEntries.sort(function (a, b) { return a.Status < b.Status; });
                }
                else {
                    sortOrderId = "byStatus";
                    currEntries.sort(function (a, b) { return a.Status > b.Status; })
                }
            }
            else if (byProperty == "bySubject")
            {
                if (sortOrderId == "bySubject") {
                    sortOrderId = null;
                    currEntries.sort(function (a, b) { return a.Subject < b.Subject; });
                }
                else {
                    sortOrderId = "bySubject";
                    currEntries.sort(function (a, b) { return a.Subject > b.Subject; })
                }
            }
            else {
                if (sortOrderId == "byId") {
                    sortOrderId = null;
                    currEntries.sort(function (a, b) { return a.Id < b.Id; });
                }
                else {
                    sortOrderId = "byId";
                    currEntries.sort(function (a, b) { return a.Id > b.Id; })
                }
            }

            $("#tableData").empty();
            showList(currList, $("#itemsCount").val());
        }
</script>
}